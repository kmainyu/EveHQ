<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="displayTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AGP1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>