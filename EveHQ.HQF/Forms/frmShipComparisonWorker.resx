<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMAAwAPcAAAAAAAEBAQICAgMDAwQEBAUFBQYGBgkJCQoKCgsLCwwMDA0NDQ4ODhAQEBERERMT
        ExQUFBcXFxsbGx0dHSIiIiMjIyQkJCwsLDIyMjMzMzo6OkNDQ0pKSktLS09PT1BQUFFRUVVVVVxcXF1d
        XWlpaXZ2dnd3d3t7e3x8fH19fX9/f4GBgYKCgoODg4SEhIWFhYiIiI6Ojo+Pj5KSkpOTk5SUlJ2dnZ+f
        n6CgoKGhoaKioqOjo6SkpKampqenp66urrCwsLGxsbKysrOzs7e3t729vb6+vsLCwsXFxcrKys7Oztzc
        3Ofn5/Hx8fj4+Pr6+vz8/P39/f///8zMzAgICBISEhYWFhkZGSkpKSsrKzExMTk5OUBAQElJSVpaWltb
        W25ubm9vb3JycnV1dXp6eoCAgIeHh42NjZiYmJubm5ycnJ6enqWlpa2trbi4uLm5ubu7u8bGxtHR0dLS
        0tTU1N/f3+Tk5Obm5vLy8vb29vv7+/7+/hoaGlRUVHNzc35+fomJicHBwc/Pz/n5+U5OTmpqaigoKD8/
        P0RERF5eXpGRka+vr/X19eXl5QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh/i1NYWRlIGJ5IEtyYXNpbWlyYSBOZWpjaGV2YSAod3d3LmxvYWRp
        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
</value>
  </data>
</root>